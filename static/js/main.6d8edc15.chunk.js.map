{"version":3,"sources":["App.tsx","index.tsx"],"names":["extend","OrbitControls","Scene","orbit","useRef","useThree","camera","gl","useEffect","position","set","current","target","update","fallback","visible","rotation","Math","PI","attach","args","color","Asset","url","other","scale","ref","domElement","enableDamping","dampingFactor","rotateSpeed","maxPolarAngle","minDistance","maxDistance","height","Lights","type","intensity","props","gltf","useLoader","GLTFLoader","object","scene","Light","App","ReactDOM","render","document","getElementById"],"mappings":"sQAMAA,YAAO,CAACC,oBAQR,SAASC,IACL,IAAMC,EAAQC,mBADD,EAEQC,cAAdC,EAFM,EAENA,OAAQC,EAFF,EAEEA,GAQf,OANAC,qBAAU,WACNF,EAAOG,SAASC,IAAI,IAAK,IAAK,GAC9BP,EAAMQ,QAAQC,OAAOF,IAAI,IAAK,EAAG,GACjCP,EAAMQ,QAAQE,WACf,CAACP,IAEG,oCACH,kBAAC,WAAD,CAAUQ,SACN,0BAAMC,SAAO,EAACN,SAAU,CAAC,EAAG,EAAG,GAAIO,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,IAC3D,mCAAeC,OAAO,WAAWC,KAAM,CAAC,IAAK,IAAK,KAClD,uCAAmBD,OAAO,WAAWE,MAAM,WAG/C,kBAACC,EAAD,CACIC,IAAI,cACJC,MAAO,CACHC,MAAO,CAAC,GAAI,GAAI,QAK5B,mCAAeC,IAAKvB,EAChBiB,KAAM,CAACd,EAAQC,EAAGoB,YAClBC,eAAa,EACbC,cAAe,GACfC,YAAa,EACbC,cAAed,KAAKC,GAAK,EAAI,GAC7Bc,YAAa,GACbC,YAAa,IACbC,OAAQ,MAGZ,kBAACC,EAAD,CACIC,KAAK,eACLf,MAAO,SACPgB,UAAW,GACX5B,SAAU,CAAC,EAAG,EAAG,MAK7B,SAASa,EAAMgB,GACX,IAAMC,EAAOC,YAAUC,IAAYH,EAAMf,KACzC,OAAO,+CAAee,EAAMd,MAArB,CAA4BkB,OAAQH,EAAKI,SAGpD,SAASR,EAAOG,GAAa,IAEnBM,EADSN,EAARF,KAEP,OAAO,kBAACQ,EAAUN,GAGPO,MA9DO,WAClB,OAAO,kBAAC,IAAD,KACH,kBAAC3C,EAAD,QCLR4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6d8edc15.chunk.js","sourcesContent":["import React, {useRef, Suspense, useEffect} from 'react'\r\nimport {extend, Canvas, useThree, useLoader} from 'react-three-fiber'\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls'\r\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport './App.css'\r\n\r\nextend({OrbitControls})\r\n\r\nconst App: React.FC = () => {\r\n    return <Canvas>\r\n        <Scene/>\r\n    </Canvas>\r\n}\r\n\r\nfunction Scene() {\r\n    const orbit = useRef<JSX.IntrinsicElements['orbitControls']>()\r\n    const {camera, gl} = useThree()\r\n\r\n    useEffect(() => {\r\n        camera.position.set(240, 100, 0)\r\n        orbit.current.target.set(150, 0, 0)\r\n        orbit.current.update()\r\n    }, [camera])\r\n\r\n    return <>\r\n        <Suspense fallback={\r\n            <mesh visible position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]}>\r\n                <planeGeometry attach='geometry' args={[649, 319, 1]}/>\r\n                <meshBasicMaterial attach='material' color='gray'/>\r\n            </mesh>\r\n        }>\r\n            <Asset\r\n                url='./field.glb'\r\n                other={{\r\n                    scale: [30, 30, 30]\r\n                }}\r\n            />\r\n        </Suspense>\r\n\r\n        <orbitControls ref={orbit}\r\n            args={[camera, gl.domElement]}\r\n            enableDamping\r\n            dampingFactor={0.4}\r\n            rotateSpeed={1}\r\n            maxPolarAngle={Math.PI / 2 - 0.1}\r\n            minDistance={10}\r\n            maxDistance={400}\r\n            height={200}\r\n        />\r\n\r\n        <Lights\r\n            type='AmbientLight'\r\n            color={0xffffff}\r\n            intensity={0.8}\r\n            position={[0, 0, 0]}\r\n        />\r\n    </>\r\n}\r\n\r\nfunction Asset(props: {url: string, other: any}) {\r\n    const gltf = useLoader(GLTFLoader, props.url)\r\n    return <primitive {...props.other} object={gltf.scene}/>\r\n}\r\n\r\nfunction Lights(props: any) {\r\n    const {type} = props\r\n    const Light = type\r\n    return <Light {...props} />\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}